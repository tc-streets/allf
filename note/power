whereis gcm
msconfig
winver
Stop-Process -id 6116
Get-ACL


# First, create an array of strings.
$array =  @("chrome","firefox","iexplore","opera")


# Next, loop through each item in your array, and stop the process.
foreach ($process in $array)
{
    Stop-Process -Name $process
}

Get-ChildItem | Select-Object Name,CreationTime,@{n='AgeInDays';e={(New-TimeSpan -Start $PSItem.CreationTime).Days}}
:vnew
python to win
%s/\//\\/g
replace 1 cr with 2
%s/\n/\r\r/g
win to python
.s/\\/\//g
e.g.
db="conn=sqlite3.connect('C:/Users/jayst/AppData/Roaming/Ditto/Ditto.db')"
conn=sqlite3.connect('C:/Users/jayst/AppData/Roaming/Ditto/Ditto.db')

model number
Get-CimInstance -ClassName Win32_ComputerSystem

dir env: | v -
vim blank lines
:g/^$/d
:version
:map
delete all except
:g!/price/d
delete control (turn of akey) ctrl-q ctrl-[letter]
redir @a
redir end
v -o (-O horz -p tabs) two files
Get-Process | Select MainWindowTitle,ProcessName,Id | where{$_.MainWindowTitle -ne ""}
grep -nr string my_directory
vim +546 functions
replace confirm gc
win # for app
win b (right bottom)

Get-Process -Name chrome | Format-List -Property * | v -
vim get diff (go get obtain gp get put)
zo fold open zc fold close
gci -Directory | Format-Wide -Column 3

numbers = "{:,}".format(5000000)
print(numbers)

virtualenv flask
gci | % fullname

(replace new line) Use \r instead of \n.
:saveas
dir env:

$env:path -split ";"

| ft -auto #format table autosize (gets rid of ellipses)
Viewing function contents
Get-Command <Function Name> | Select -ExpandProperty ScriptBlock
	or
(Get-Command <Function Name>).ScriptBlock
  or
$function:cpu
python -c "print('Hi!')"

pip install sql-formatter

z<CR> or zt puts current line to top of screen (<CR> == Enter)
z. or zz puts current line to center of screen
z- or zb puts current line to bottom of screen
(z<CR>, z., and z- puts the cursor in the first non blank column. zt, zz, and zb leaves the cursor in the current column)

You can disable this by going to: File -> Preferences -> Settings
find: "git.decorations.enabled" and change it to false
If you are not working with git find: "git.enabled" and change it to false
git commit --amend --no-edit

$Env:Path += ";c:\temp"
dir Env: | vim -
 -ErrorAction SilentlyContinue
gc .\Test.java | Set-Clipboard

$a -replace '\w+\W+\w+$' #remove exe from gcm
$a=(gcm kotlinc | % {$_.source}) -replace '\w+\W+\w+$'
Get-Process | Where-Object {$_.WorkingSet -gt 100000000}
You can also use the shortcut WinKey+Shift+S to start taking screenshots from any app directly.


# get Firefox process
$firefox = Get-Process firefox -ErrorAction SilentlyContinue
if ($firefox) {
  # try gracefully first
  $firefox.CloseMainWindow()
  # kill after five seconds
  Sleep 5
  if (!$firefox.HasExited) {
    $firefox | Stop-Process -Force
  }
}
Remove-Variable firefox 
Create a new pane, splitting horizontally: Alt+Shift+- (Alt, Shift, and a minus sign)
Create a new pane, splitting vertically: Alt+Shift++ (Alt, Shift, and a plus sign)
Move pane focus: Alt+Left, Alt+Right, Alt+Down, Alt+Up
Resize the focused pane: Alt+Shift+Left, Alt+Shift+Right, Alt+Shift+Down, Alt+Shift+Up
Close a pane: Ctrl+Shift+W
Get-Process | Where-Object {$_.WorkingSet -gt 200000000}
Get-Help Get-ChildItem -ShowWindow

kotlinc hello.kt -include-runtime -d hello.jar
java -jar hello.jar

noremap <F4> :set hlsearch! hlsearch?

Value defined as Important > Inline >id nesting > id > class nesting > class > tag nesting > tag
WipeReg

%history -g -f filene

admin windows x a
function Test-Administrator  
{  
    $user = [Security.Principal.WindowsIdentity]::GetCurrent();
    (New-Object Security.Principal.WindowsPrincipal $user).IsInRole([Security.Principal.WindowsBuiltinRole]::Administrator)  
}
python pip files: python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"

System restore point (run as admin)
powershell.exe -ExecutionPolicy Bypass -NoExit -Command Checkpoint-Computer -Description ‘Restore Point Name’ -RestorePointType ‘MODIFY_SETTINGS’


Get-ChildItem Env: | Sort Name

$function:getc
Get-Process | Select-Object -Property name, id
Get-Process | Select-Object -Property name, id | grep pyth
Stop-Process -name python
Get-Process | Select-Object -Property name, id | grep pyth
Get-Host | Select-Object Version


Get-ChildItem -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.Length -gt 55550KB} | Select @{Name="Length";Expression={$_.Length/1MB}}, fullName  
Get-ChildItem -Recurse -file -ErrorAction SilentlyContinue | Where-Object {$_.LastWriteTime -gt (Get-Date).AddDays(-1)}
gci -file -name -Recurse
gci ch* | % {$fileBaseNames = (Get-ChildItem).BaseName}

C:\Users\jayst\AppData\Local\nvim-data\site\autoload

Replacing this line:

with open('filename', 'w') as f:
With this:
with open('filename', 'w', encoding='utf-8') as f:
The reason why it is working is because the encoding is changed to UTF-8 when using the file, so characters in UTF-8 are able to be converted to text, instead of returning an error when it encounters a UTF-8 character that is not suppord by the current encoding.
Goyo + VimPencil
