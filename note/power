whereis gcm

vim blank lines
:g/^$/d
:version
:map
delete all except
:g!/price/d
delete control (turn of akey) ctrl-q ctrl-[letter]
virtualenv flask


(replace new line) Use \r instead of \n.
:saveas
dir env;

$env:path -split ";"

Viewing function contents
Get-Command <Function Name> | Select -ExpandProperty ScriptBlock
	or
(Get-Command <Function Name>).ScriptBlock
  or
$function:cpu
python -c "print('Hi!')"

pip install sql-formatter

z<CR> or zt puts current line to top of screen (<CR> == Enter)
z. or zz puts current line to center of screen
z- or zb puts current line to bottom of screen
(z<CR>, z., and z- puts the cursor in the first non blank column. zt, zz, and zb leaves the cursor in the current column)

You can disable this by going to: File -> Preferences -> Settings
find: "git.decorations.enabled" and change it to false
If you are not working with git find: "git.enabled" and change it to false
git commit --amend --no-edit

$Env:Path += ";c:\temp"
dir Env: | vim -
 -ErrorAction SilentlyContinue
gc .\Test.java | Set-Clipboard

$a -replace '\w+\W+\w+$' #remove exe from gcm
$a=(gcm kotlinc | % {$_.source}) -replace '\w+\W+\w+$'
Get-Process | Where-Object {$_.WorkingSet -gt 100000000}
You can also use the shortcut WinKey+Shift+S to start taking screenshots from any app directly.


# get Firefox process
$firefox = Get-Process firefox -ErrorAction SilentlyContinue
if ($firefox) {
  # try gracefully first
  $firefox.CloseMainWindow()
  # kill after five seconds
  Sleep 5
  if (!$firefox.HasExited) {
    $firefox | Stop-Process -Force
  }
}
Remove-Variable firefox 
Create a new pane, splitting horizontally: Alt+Shift+- (Alt, Shift, and a minus sign)
Create a new pane, splitting vertically: Alt+Shift++ (Alt, Shift, and a plus sign)
Move pane focus: Alt+Left, Alt+Right, Alt+Down, Alt+Up
Resize the focused pane: Alt+Shift+Left, Alt+Shift+Right, Alt+Shift+Down, Alt+Shift+Up
Close a pane: Ctrl+Shift+W
Get-Process | Where-Object {$_.WorkingSet -gt 200000000}
Get-Help Get-ChildItem -ShowWindow

pip install sql-formatter

kotlinc hello.kt -include-runtime -d hello.jar
java -jar hello.jar

noremap <F4> :set hlsearch! hlsearch?

Value defined as Important > Inline >id nesting > id > class nesting > class > tag nesting > tag
WipeReg

%history -g -f filene

admin windows x a
function Test-Administrator  
{  
    $user = [Security.Principal.WindowsIdentity]::GetCurrent();
    (New-Object Security.Principal.WindowsPrincipal $user).IsInRole([Security.Principal.WindowsBuiltinRole]::Administrator)  
}
python pip files: python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"

System restore point (run as admin)
powershell.exe -ExecutionPolicy Bypass -NoExit -Command Checkpoint-Computer -Description ‘Restore Point Name’ -RestorePointType ‘MODIFY_SETTINGS’


Get-ChildItem Env: | Sort Name

$function:getc
Get-Process | Select-Object -Property name, id
Get-Process | Select-Object -Property name, id | grep pyth
Stop-Process -name python
Get-Process | Select-Object -Property name, id | grep pyth
Get-Host | Select-Object Version


Get-ChildItem -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.Length -gt 55550KB} | Select @{Name="Length";Expression={$_.Length/1MB}}, fullName  
Get-ChildItem -Recurse -file -ErrorAction SilentlyContinue | Where-Object {$_.LastWriteTime -gt (Get-Date).AddDays(-1)}
gci -file -name -Recurse
gci ch* | % {$fileBaseNames = (Get-ChildItem).BaseName}

C:\Users\jayst\AppData\Local\nvim-data\site\autoload
